plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.1.1"
    id('io.micronaut.docker') version "3.6.4"
    id('io.micronaut.library') version '3.6.4'
}

version = "0.1"
group = "io.easeci.worker"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.easeci.worker.*")
    }
}

dependencies {
    implementation("org.projectlombok:lombok:1.18.22")
    annotationProcessor("org.projectlombok:lombok:1.18.22")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation('jakarta.validation:jakarta.validation-api:3.0.2')
    implementation("org.slf4j:slf4j-log4j12:2.0.3")
    implementation("io.micronaut:micronaut-validation")
    implementation("com.github.docker-java:docker-java-core:3.2.14")
    implementation("com.github.docker-java:docker-java:3.2.14")
    implementation("com.github.docker-java:docker-java-transport-httpclient5:3.2.14")
    implementation 'io.projectreactor:reactor-core:3.5.2'

    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
}

application {
    mainClass.set("io.easeci.worker.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
compileJava.options.fork = true
compileJava.options.forkOptions.executable = '/usr/lib/jvm/java-17-openjdk-amd64/bin/javac'

test {
    useJUnitPlatform()
}